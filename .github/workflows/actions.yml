name: build and publish docker image

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: bardiche
  URL: ${{ github.server_url }}/${{ github.repository }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: make env file
        shell: bash
        run: |
          cat > .env <<EOF
          TOKEN=${{ secrets.DISCORD_TOKEN }}
          EOF

      - name: yarn install
        run: yarn install --production

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          labels: |
            org.opencontainers.image.title=Bardiche
            org.opencontainers.image.vendor="online drinking party club"
            org.opencontainers.image.authors="ryder472 <gtafansa@gmail.com>"
            org.opencontainers.image.url=${{ env.URL }}
            org.opencontainers.image.source=${{ env.URL }}
            org.opencontainers.image.licenses=MIT

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          target: prd
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
